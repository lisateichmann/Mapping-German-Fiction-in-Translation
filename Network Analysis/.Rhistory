library(igraph)
library(ggplot2)
library(dplyr)
library(gridExtra)
library(grid)
library(tidyverse)
library(ggpubr)
library(visNetwork)
library(ggpubr)
library(proxy)
library(corrplot)
library(dendextend)
lang <- read.csv("data/alldnb_languages_freq_ch2.1_v2.csv")
lang$x <- NULL
##Load df with author per language (just rows, no frequencies)
author_lang_freq <- read.csv("data/alldnb_author_language_clean_ch2.1_v2.csv")
##load table with title counts per language per author
author_lang_table <- read.csv("data/alldnb_author_language_count_ch2.1_v2.csv")
##1.Create language per author matrix
##1.1create adjacency matrix with binary classifier if author has translations in a given language
author_lang_matrix<- author_lang_table %>% mutate_if(is.numeric, ~1 * (. > 0))
#delete author column
lang_lang_matrix <- author_lang_matrix
lang_lang_matrix[1] <- NULL
lang_lang_matrix[1] <- NULL
lang_lang_matrix <- as.matrix(lang_lang_matrix)
lang_lang_matrix<-t(lang_lang_matrix)%*%as.matrix(lang_lang_matrix)
diag(lang_lang_matrix)<-0
# Mean of the each row of the matrix
lang_lang_matrix_mean<-rowMeans(lang_lang_matrix)
g2 <- graph_from_adjacency_matrix(lang_lang_matrix, weighted=TRUE, mode = "undirected")
##The number of shared authors will be the weights
E(g2)$weight
lang_lang_author_edges <- lang_lang_author_edges %>%
filter(!str_detect(to, 'na_count'))
##Export as edgelist
lang_lang_author_edges <- get.data.frame(g2)
lang_lang_author_edges <- lang_lang_author_edges %>%
filter(!str_detect(to, 'na_count'))
nodes <- NULL
nodes$id <- lang$Language
nodes <- as.data.frame(nodes)
lang_lang_author_edges_above100 <- lang_lang_author_edges %>% filter_all(all_vars(. > 100))
lang_lang_author_edges_above200 <- lang_lang_author_edges %>% filter_all(all_vars(. > 200))
g2_above100 <- lang_lang_author_edges_above100
names(g2_above100)[3] <- "weight"
g2_above100 <- graph_from_data_frame(g2_above100, directed = F, vertices = NULL)
l<-layout_with_fr(g2_above100)
plot(g2_above100, vertex.size=1,vertex.shape="none",
edge.width=(edge_attr(g2_above100)$weight)/100,
edge.curved=0.3,
layout=l*3.5,
main="Language Network weighted\n by sums of shared authors (>100 authors)")
g2_above200 <- lang_lang_author_edges_above200
names(g2_above200)[3] <- "weight"
g2_above200 <- graph_from_data_frame(g2_above200, directed = F, vertices = NULL)
l<-layout_with_dh(g2_above200)
plot(g2_above200, vertex.size=1,vertex.shape="none",
edge.width=((edge_attr(g2_above200)$weight)/100),
layout=l*3.5,
main="Language Network weighted\n by sums of shared authors (>200 authors)")
backup_g2 <- g2
g2 <- delete_vertices(g2, c(1,5)) %>%
delete_vertices("xxx")
g2 <- delete_vertices(g2, c(1,5)) %>%
delete_vertices("na_count")
#first, confirm how many nodes and edges you have
g2 #gives you overview of your graph
length(V(g2)) #V(g) = vectors for your graph object g
length(E(g2)) #E(g) = edges for your graph object g
plot(g2, layout = layout.kamada.kawai(g2), vertex.size = 3, vertex.frame.color = NULL,
vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5, vertex.label=g2$names)
lo <- layout.fruchterman.reingold(g2, repulserad = vcount(g2)^2.8,
area = vcount(g2)^2.3, niter = 1000)
plot(g2, layout = lo, vertex.size = 3, vertex.frame.color = NULL,
vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5, vertex.label=g2$names)
iso <- V(g2)[degree(g2)==0]
g2_noiso <- delete.vertices(g2, iso)
plot(g2_noiso, layout = lo, vertex.size = 3, vertex.frame.color = NULL,
vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5, vertex.label=g2$names)
deg_df <- as.data.frame(deg)
deg_df <- tibble::rownames_to_column(deg_df, "lang")
ggplot(deg_df, aes(x=reorder(lang, -deg), y=deg)) +
geom_bar(stat="identity") + xlab("Languages") + ylab("Degree")+
scale_y_continuous(expand = expand_scale(mult = c(0, .1)))+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5)) + ggtitle("Degree (number of edges or shared authors) between languages)") +coord_flip()+theme_bw()
deg<-sort(degree(g2), TRUE)
deg_df <- as.data.frame(deg)
deg_df <- tibble::rownames_to_column(deg_df, "lang")
ggplot(deg_df, aes(x=reorder(lang, -deg), y=deg)) +
geom_bar(stat="identity") + xlab("Languages") + ylab("Degree")+
scale_y_continuous(expand = expand_scale(mult = c(0, .1)))+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5)) + ggtitle("Degree (number of edges or shared authors) between languages)") +coord_flip()+theme_bw()
plot(g2_noiso, edge.arrow.size = .5, vertex.color = "gold",layout=layout.kamada.kawai(g2_noiso),
edge.width=E(g2_noiso)$size*0.5,
vertex.size= degree(g2_noiso)*0.25,
main="Language Network \nby shared authors", sub= "Degree Centrality")
g2_community <- fastgreedy.community(g2)
plot((as.dendrogram(g2_community)), labels = NULL, cex = 5, sub = NULL,
xlab = NULL, ylab = "Height")
dend <- as.dendrogram(g2_community)
plot(color_branches(dend, 6, groupLabels = TRUE, ylab = NULL))
